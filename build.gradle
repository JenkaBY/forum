group 'by.intexsoft'
version '0.9.0'

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.3'
        classpath "gradle.plugin.com.boxfuse.client:gradle-plugin-publishing:5.0.4"
    }
}

def tomcatVersion = '8.5.16'
def springVersion = '4.3.10.RELEASE'
def springSecurityOauthVersion = '2.2.0.RELEASE'
def hibernateVersion = '5.2.10.Final'
def postgreSqlVersion = '9.4.1212'
def logbackVersion = '1.2.3'
def jacksonVersion = '2.9.0'
def mockitoVersion = '2.10.0'
def junitVersion = '4.12'

apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'idea'
apply plugin: 'org.flywaydb.flyway'

// если убрать то кирилица не будет восприниматься и варка не будет собираться
compileJava.options.encoding = 'UTF-8'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile 'org.springframework.data:spring-data-jpa:1.11.7.RELEASE'
    compile "org.springframework.security.oauth:spring-security-oauth2:${springSecurityOauthVersion}"
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile "org.hibernate:hibernate-entitymanager:${hibernateVersion}"
    compile "org.postgresql:postgresql:${postgreSqlVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:8.5.2",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

tomcat {
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol = 'org.apache.coyote.ajp.AjpNio2Protocol'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

war {
    dependsOn = ['client:buildClient']
    from 'client/dist'
    destinationDir = file("$rootDir/build/war")
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/fly_forum'
    user = 'postgres'
    password = 'postgres'
    schemas = ['public', 'test']
    placeholders = [
            'keyABC': 'valueXYZ'
    ]
    cleanDisabled = false
}

task buildWarWithoutDeps(type: War) {
    group = 'build'
    description = 'Builds war when client has been compiled'
    from 'client/dist'
    destinationDir = file("$rootDir/build/war2")
}